Chuong:
    - My test testConfigScreenNameField goes to the config screen and test if the name text field works with the user input.
        - I use clickOn to click on the text field and type in "YEET" with the write function to make sure that the text field exists.
        - Then, to check and make sure that it has got the correct user input, I use verifyThat and TextInputControlMatchers.hasText to check if the text in the text field is "YEET".

    - My test testConfigSavedUponProceed goes to the config screen, pick the configs, and click on proceed. It tests if the configs are saved before entering the game.
        - I use clickOn to make all of my choices.
        - After clicking the PROCEED button, I use assertEquals to compare my input with the system configs to make sure it's saved properly
        
Aaron:
    -Implemented "testStart" to ensure the start button on the welcome screen forwards the user to the initial configuration page using         TestFX’s verify method.  
    -Implemented "testEmptyString" to ensure when a user leaves the name field empty and clicks proceed on the initial configuration page,      the field is populated with a message “Please enter a character name” using verifyThat. 
